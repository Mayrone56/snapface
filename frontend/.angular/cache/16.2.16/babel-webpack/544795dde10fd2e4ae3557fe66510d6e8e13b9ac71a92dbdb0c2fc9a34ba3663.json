{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\n// Déclaration du décorateur @Component pour indiquer qu'il s'agit d'un composant Angular\n// Classe du composant\nexport class LandingPageComponent {\n  // Le constructeur permet d'injecter des services dans le composant\n  // Ici, le service Router est injecté pour permettre la navigation vers une autre page\n  constructor(router) {\n    this.router = router;\n  }\n  // Méthode appelée lorsque l'utilisateur clique sur le bouton \"Continuer vers Snapface\"\n  // Elle utilise le service Router pour naviguer vers la page 'facesnaps'\n  onContinue() {\n    // router.navigateByUrl permet de rediriger l'utilisateur vers la page indiquée (dans ce cas, 'facesnaps')\n    this.router.navigateByUrl('facesnaps');\n  }\n  // Méthode appelée lors de la soumission du formulaire d'email\n  // form: NgForm est le paramètre représentant le formulaire entier, accessible grâce à la directive ngForm\n  onSubmitForm(form) {\n    // Log des données soumises dans la console. form.value contient les valeurs du formulaire\n    // Ici, cela affichera l'objet { userEmail: \"valeur entrée par l'utilisateur\" }\n    console.log('Souscription de ', form.value);\n  }\n  static {\n    this.ɵfac = function LandingPageComponent_Factory(t) {\n      return new (t || LandingPageComponent)(i0.ɵɵdirectiveInject(i1.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LandingPageComponent,\n      selectors: [[\"app-landing-page\"]],\n      decls: 16,\n      vars: 1,\n      consts: [[1, \"landing-block\"], [3, \"ngSubmit\"], [\"emailForm\", \"ngForm\"], [\"for\", \"emailInput\"], [\"type\", \"email\", \"id\", \"emailInput\", \"name\", \"userEmail\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"src\", \"/assets/snapface-logo.svg\", \"alt\", \"Snapface logo\"], [1, \"landing-links\"], [3, \"click\"]],\n      template: function LandingPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Bienvenue sur Snapface !\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4, \" Ici vous pourrez partager vos photos -> FaceSnaps perso avec le monde entier. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 1, 2);\n          i0.ɵɵlistener(\"ngSubmit\", function LandingPageComponent_Template_form_ngSubmit_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const _r0 = i0.ɵɵreference(6);\n            return i0.ɵɵresetView(ctx.onSubmitForm(_r0));\n          });\n          i0.ɵɵelementStart(7, \"label\", 3);\n          i0.ɵɵtext(8, \"Inscrivez-vous \\u00E0 notre newsletter !\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function LandingPageComponent_Template_input_ngModelChange_9_listener($event) {\n            return ctx.userEmail = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 5);\n          i0.ɵɵtext(11, \"Souscrire\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(12, \"img\", 6);\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function LandingPageComponent_Template_button_click_14_listener() {\n            return ctx.onContinue();\n          });\n          i0.ɵɵtext(15, \"Continuer vers Snapface\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngModel\", ctx.userEmail);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n      styles: [\"\\n\\n.landing-block[_ngcontent-%COMP%] {\\n  height: 80vh;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n}\\n.landing-block[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  height: 40vh;\\n}\\n.landing-block[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  text-align: center;\\n  color: #ee9267;\\n}\\n\\n.landing-links[_ngcontent-%COMP%] {\\n  width: 100%;\\n  text-align: center;\\n}\\n.landing-links[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n  color: #22d499;\\n}\\n.landing-links[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  padding: 5px 10px;\\n  border: none;\\n  box-shadow: lightgray 2px 2px 10px;\\n  margin-right: 20px;\\n  font-size: 20px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  border: 1px solid #ee9267;\\n  border-radius: 40px;\\n  height: 60px;\\n  color: #ee9267;\\n  padding: 16px;\\n}\\n.landing-links[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active {\\n  transform: translate(1px, 1px);\\n  box-shadow: lightgray 0 0 5px;\\n}\\n.landing-links[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #ee9267;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGFuZGluZy1wYWdlL2xhbmRpbmctcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQ0FBQTtBQUNBO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFDRjtBQUFFO0VBQ0UsWUFBQTtBQUVKO0FBQUU7RUFDRSxrQkFBQTtFQUNBLGNBQUE7QUFFSjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtBQUNGO0FBQUU7RUFDRSxjQUFBO0FBRUo7QUFBRTtFQUNFLDZCQUFBO0VBQ0EsaUJBQUE7RUFDQSxZQUFBO0VBQ0Esa0NBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSx5QkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxhQUFBO0FBRUo7QUFBSTtFQUNFLDhCQUFBO0VBQ0EsNkJBQUE7QUFFTjtBQUNJO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0FBQ04iLCJzb3VyY2VzQ29udGVudCI6WyIvKiBsYW5kaW5nLXBhZ2UuY29tcG9uZW50LnNjc3MgKi9cclxuLmxhbmRpbmctYmxvY2sge1xyXG4gIGhlaWdodDogODB2aDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBpbWcge1xyXG4gICAgaGVpZ2h0OiA0MHZoO1xyXG4gIH1cclxuICBoMSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogI2VlOTI2NztcclxuICB9XHJcbn1cclxuXHJcbi5sYW5kaW5nLWxpbmtzIHtcclxuICB3aWR0aDogMTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYTpob3ZlciB7XHJcbiAgICBjb2xvcjogIzIyZDQ5OTtcclxuICB9XHJcbiAgYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3gtc2hhZG93OiBsaWdodGdyYXkgMnB4IDJweCAxMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZTkyNjc7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA2MHB4O1xyXG4gICAgY29sb3I6ICNlZTkyNjc7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG5cclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMXB4LCAxcHgpO1xyXG4gICAgICBib3gtc2hhZG93OiBsaWdodGdyYXkgMCAwIDVweDtcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VlOTI2NztcclxuICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["LandingPageComponent","constructor","router","onContinue","navigateByUrl","onSubmitForm","form","console","log","value","i0","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","LandingPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LandingPageComponent_Template_form_ngSubmit_5_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","LandingPageComponent_Template_input_ngModelChange_9_listener","$event","userEmail","ɵɵelement","LandingPageComponent_Template_button_click_14_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\User\\Work\\Tuto\\Openclassrooms\\snapface\\frontend\\src\\app\\landing-page\\landing-page.component.ts","C:\\Users\\User\\Work\\Tuto\\Openclassrooms\\snapface\\frontend\\src\\app\\landing-page\\landing-page.component.html"],"sourcesContent":["// Importations nécessaires pour créer le composant et gérer les formulaires et la navigation\nimport { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms'; // NgForm permet de gérer les formulaires template-driven\nimport { Router } from '@angular/router'; // Router permet la navigation entre les différentes pages\n\n// Déclaration du décorateur @Component pour indiquer qu'il s'agit d'un composant Angular\n@Component({\n  selector: 'app-landing-page', // Le sélecteur permet d'insérer ce composant dans un template HTML avec la balise <app-landing-page>\n  templateUrl: './landing-page.component.html', // Fichier HTML associé à ce composant\n  styleUrls: ['./landing-page.component.scss'], // Fichier SCSS (feuille de style) associé à ce composant\n})\n// Classe du composant\nexport class LandingPageComponent {\n  // Définition d'une propriété userEmail :\n  // Cette variable est utilisée dans le formulaire pour stocker l'email de l'utilisateur\n  // La valeur initiale est vide, elle sera remplie lorsque l'utilisateur saisira son email dans l'input\n  userEmail!: string;\n\n  // Le constructeur permet d'injecter des services dans le composant\n  // Ici, le service Router est injecté pour permettre la navigation vers une autre page\n  constructor(private router: Router) {}\n\n  // Méthode appelée lorsque l'utilisateur clique sur le bouton \"Continuer vers Snapface\"\n  // Elle utilise le service Router pour naviguer vers la page 'facesnaps'\n  onContinue() {\n    // router.navigateByUrl permet de rediriger l'utilisateur vers la page indiquée (dans ce cas, 'facesnaps')\n    this.router.navigateByUrl('facesnaps');\n  }\n\n  // Méthode appelée lors de la soumission du formulaire d'email\n  // form: NgForm est le paramètre représentant le formulaire entier, accessible grâce à la directive ngForm\n  onSubmitForm(form: NgForm) {\n    // Log des données soumises dans la console. form.value contient les valeurs du formulaire\n    // Ici, cela affichera l'objet { userEmail: \"valeur entrée par l'utilisateur\" }\n    console.log('Souscription de ', form.value);\n  }\n}\n","<!-- landing-page.component.html -->\n<div class=\"landing-block\">\n  <!-- Titre de bienvenue sur la page d'accueil -->\n  <h1>Bienvenue sur Snapface !</h1>\n\n  <!-- Description courte de ce qu'offre le site, ici un partage de photos -->\n  <p>\n    Ici vous pourrez partager vos photos -> FaceSnaps perso avec le monde\n    entier.\n  </p>\n\n  <!-- Formulaire pour s'inscrire à la newsletter -->\n  <!-- `ngForm` est une directive Angular qui permet de transformer ce formulaire en un formulaire géré par Angular. -->\n  <!-- Avec la syntaxe `#emailForm=\"ngForm\"`, on crée une référence locale appelée `emailForm`. Cette référence permet d'accéder aux propriétés du formulaire (comme sa validité, ses valeurs, etc.). -->\n  <!-- `(ngSubmit)=\"onSubmitForm(emailForm)\"` : Quand l'utilisateur soumet le formulaire, cela déclenche la méthode `onSubmitForm` du composant TypeScript, en passant la référence `emailForm`. -->\n  <form #emailForm=\"ngForm\" (ngSubmit)=\"onSubmitForm(emailForm)\">\n    <!-- Label pour le champ de saisie de l'email -->\n    <label for=\"emailInput\">Inscrivez-vous à notre newsletter !</label>\n\n    <!-- Champ de saisie de type email -->\n    <!-- `[(ngModel)]=\"userEmail\"` : L'email saisi par l'utilisateur est lié au modèle `userEmail` défini dans le composant TypeScript. -->\n    <!-- Cela permet de mettre à jour dynamiquement `userEmail` quand l'utilisateur modifie le champ d'email dans le formulaire. -->\n    <!-- `name=\"userEmail\"` : Le nom du contrôle (input) dans le formulaire, nécessaire pour que Angular puisse gérer ce champ. -->\n    <input\n      type=\"email\"\n      id=\"emailInput\"\n      [(ngModel)]=\"userEmail\"\n      name=\"userEmail\"\n    />\n\n    <!-- Bouton pour soumettre le formulaire -->\n    <!-- Ce bouton déclenchera l'événement `(ngSubmit)` qui appellera `onSubmitForm`. -->\n    <button type=\"submit\">Souscrire</button>\n  </form>\n\n  <!-- Affichage du logo de Snapface -->\n  <!-- `src=\"/assets/snapface-logo.svg\"` : Chemin relatif vers l'image du logo dans le dossier `assets` de l'application Angular. -->\n  <!-- `alt=\"Snapface logo\"` : Texte alternatif pour l'accessibilité, au cas où l'image ne serait pas affichée. -->\n  <img src=\"/assets/snapface-logo.svg\" alt=\"Snapface logo\" />\n\n  <!-- Section avec des liens ou boutons pour naviguer vers d'autres pages du site -->\n  <div class=\"landing-links\">\n    <!-- Ancienne version du lien : une simple ancre pour rediriger vers une autre page via le `routerLink`. -->\n    <!-- Ce lien permettait de naviguer vers la page /facesnaps -->\n    <!-- <a routerLink=\"/facesnaps\">Continuer vers Snapface</a> -->\n\n    <!-- Nouvelle version : un bouton qui appelle la méthode `onContinue()` définie dans le composant TypeScript pour naviguer vers la page /facesnaps. -->\n    <!-- Ce bouton déclenche la méthode `onContinue` lorsqu'il est cliqué, qui utilise `Router` pour rediriger l'utilisateur. -->\n    <button (click)=\"onContinue()\">Continuer vers Snapface</button>\n  </div>\n</div>\n"],"mappings":";;;AAKA;AAMA;AACA,OAAM,MAAOA,oBAAoB;EAM/B;EACA;EACAC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErC;EACA;EACAC,UAAUA,CAAA;IACR;IACA,IAAI,CAACD,MAAM,CAACE,aAAa,CAAC,WAAW,CAAC;EACxC;EAEA;EACA;EACAC,YAAYA,CAACC,IAAY;IACvB;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAACG,KAAK,CAAC;EAC7C;;;uBAvBWT,oBAAoB,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAApBb,oBAAoB;MAAAc,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UCXjCV,EAAA,CAAAY,cAAA,aAA2B;UAErBZ,EAAA,CAAAa,MAAA,+BAAwB;UAAAb,EAAA,CAAAc,YAAA,EAAK;UAGjCd,EAAA,CAAAY,cAAA,QAAG;UACDZ,EAAA,CAAAa,MAAA,sFAEF;UAAAb,EAAA,CAAAc,YAAA,EAAI;UAMJd,EAAA,CAAAY,cAAA,iBAA+D;UAArCZ,EAAA,CAAAe,UAAA,sBAAAC,uDAAA;YAAAhB,EAAA,CAAAiB,aAAA,CAAAC,GAAA;YAAA,MAAAC,GAAA,GAAAnB,EAAA,CAAAoB,WAAA;YAAA,OAAYpB,EAAA,CAAAqB,WAAA,CAAAV,GAAA,CAAAhB,YAAA,CAAAwB,GAAA,CAAuB;UAAA,EAAC;UAE5DnB,EAAA,CAAAY,cAAA,eAAwB;UAAAZ,EAAA,CAAAa,MAAA,+CAAmC;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UAMnEd,EAAA,CAAAY,cAAA,eAKE;UAFAZ,EAAA,CAAAe,UAAA,2BAAAO,6DAAAC,MAAA;YAAA,OAAAZ,GAAA,CAAAa,SAAA,GAAAD,MAAA;UAAA,EAAuB;UAHzBvB,EAAA,CAAAc,YAAA,EAKE;UAIFd,EAAA,CAAAY,cAAA,iBAAsB;UAAAZ,EAAA,CAAAa,MAAA,iBAAS;UAAAb,EAAA,CAAAc,YAAA,EAAS;UAM1Cd,EAAA,CAAAyB,SAAA,cAA2D;UAG3DzB,EAAA,CAAAY,cAAA,cAA2B;UAOjBZ,EAAA,CAAAe,UAAA,mBAAAW,uDAAA;YAAA,OAASf,GAAA,CAAAlB,UAAA,EAAY;UAAA,EAAC;UAACO,EAAA,CAAAa,MAAA,+BAAuB;UAAAb,EAAA,CAAAc,YAAA,EAAS;;;UAtB7Dd,EAAA,CAAA2B,SAAA,GAAuB;UAAvB3B,EAAA,CAAA4B,UAAA,YAAAjB,GAAA,CAAAa,SAAA,CAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}