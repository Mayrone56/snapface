{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport class AuthInterceptor {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(req, next) {\n    const headers = new HttpHeaders().append('Authorization', `Bearer ${this.authService.getToken()}`);\n    const modifiedReq = req.clone({\n      headers\n    });\n    return next.handle(modifiedReq);\n  }\n  static {\n    this.ɵfac = function AuthInterceptor_Factory(t) {\n      return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","AuthInterceptor","constructor","authService","intercept","req","next","headers","append","getToken","modifiedReq","clone","handle","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["C:\\Users\\User\\Work\\Tuto\\Openclassrooms\\snapface\\frontend\\src\\app\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpHeaders,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const headers = new HttpHeaders().append(\r\n      'Authorization',\r\n      `Bearer ${this.authService.getToken()}`\r\n    );\r\n    const modifiedReq = req.clone({ headers });\r\n    return next.handle(modifiedReq);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAGEA,WAAW,QAGN,sBAAsB;;;AAM7B,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,SAASA,CACPC,GAAqB,EACrBC,IAAiB;IAEjB,MAAMC,OAAO,GAAG,IAAIP,WAAW,EAAE,CAACQ,MAAM,CACtC,eAAe,EACf,UAAU,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE,EAAE,CACxC;IACD,MAAMC,WAAW,GAAGL,GAAG,CAACM,KAAK,CAAC;MAAEJ;IAAO,CAAE,CAAC;IAC1C,OAAOD,IAAI,CAACM,MAAM,CAACF,WAAW,CAAC;EACjC;;;uBAbWT,eAAe,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAff,eAAe;MAAAgB,OAAA,EAAfhB,eAAe,CAAAiB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}